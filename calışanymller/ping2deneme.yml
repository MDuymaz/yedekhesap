name: Keep Proxy Alive 2 URL DENEME
on:
  schedule:
    - cron: "* */4 * * *"
  workflow_dispatch:

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: 5 saat boyunca her 10 dakikada bir ping at ve en sonunda cache ping at
        env:
          PING_URL: ${{ secrets.PING_URL }}
          PING_URL2: ${{ secrets.PING_URL2 }}
          PING_URL3: ${{ secrets.PING_URL3 }}
          PING_URL4: ${{ secrets.PING_URL4 }}
          PING_CACHE_URL: ${{ secrets.PING_CACHE_URL }}
          PING_CACHE_URL2: ${{ secrets.PING_CACHE_URL2 }}
          PING_CACHE_URL3: ${{ secrets.PING_CACHE_URL3 }}
        run: |
          # jq y√ºkl√º deƒüilse y√ºkle
          if ! command -v jq &> /dev/null; then
            echo "jq bulunamadƒ±, y√ºkleniyor..."
            sudo apt-get update && sudo apt-get install -y jq
          fi

          END_TIME=$((SECONDS + 5 * 60 * 60))

          while [ $SECONDS -lt $END_TIME ]; do
            # Normal URL ping
            for URL_NAME in PING_URL PING_URL2 PING_URL3 PING_URL4; do
              URL=${!URL_NAME}
              echo "üîÑ $URL_NAME i√ßin ping atƒ±lƒ±yor: $URL - $(date '+%Y-%m-%d %H:%M:%S')"
              
              HTML=$(curl -s "$URL")
              TEXT=$(echo "$HTML" | grep -oP '(?<=<h1>).*?(?=</h1>)')

              if [[ -z "$TEXT" ]]; then
                echo "‚ùå $URL_NAME sistemi pasif olabilir!"
              else
                echo "‚úÖ $URL_NAME: $TEXT"
              fi
            done

            echo "‚è≥ 10 dakika bekleniyor..."
            sleep 600
          done

          echo "‚úÖ 5 saatlik √ßalƒ±≈üma tamamlandƒ±."

          # Cache URL ping (JSON-safe)
          for CACHE_NAME in PING_CACHE_URL PING_CACHE_URL2 PING_CACHE_URL3; do
            CACHE_URL=${!CACHE_NAME}
            echo "üîÑ $CACHE_NAME cache ping atƒ±lƒ±yor: $CACHE_URL - $(date '+%Y-%m-%d %H:%M:%S')"
            
            CACHE_HTML=$(curl -s "$CACHE_URL")

            # JSON parsing i√ßin jq kullan
            CACHE_TEXT=$(echo "$CACHE_HTML" | jq -r '.message')

            if [[ -z "$CACHE_TEXT" || "$CACHE_TEXT" == "null" ]]; then
              echo "‚ùå $CACHE_NAME cache sistemi pasif olabilir!"
            else
              echo "‚úÖ $CACHE_NAME cache: $CACHE_TEXT"
            fi
          done
